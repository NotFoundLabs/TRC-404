int op::transfer_nft_item() asm "0x5fcc3d14 PUSHINT";   

cell transferNftMsg(int query_id,slice new_owner,slice response_destination,int forward_ton_amount,slice  forward_payload){
     return   begin_cell().store_uint(op::transfer_nft_item(), 32)
                              .store_uint(query_id, 64)
                              .store_slice(new_owner)
                              .store_slice(response_destination)
                              .store_int(0,1)
                              .store_coins(forward_ton_amount)
                              .store_slice(forward_payload)
                              .end_cell();        
}

(int,slice,slice,int,int,slice) load_TransferNftItemMsg(slice in_msg_body){
    int query_id = in_msg_body~load_uint(64);
    slice new_owner = in_msg_body~load_msg_addr();
    slice response_destination = in_msg_body~load_msg_addr();
    int custom_payload = in_msg_body~load_int(1);  
    int forward_ton_amount = in_msg_body~load_coins();
    slice forward_payload = in_msg_body;
 return (query_id, new_owner, response_destination,
        custom_payload, forward_ton_amount, forward_payload);    
}

int op::deployNftItem()  asm "0x78ccd28 PUSHINT";

(int,int, slice,slice,slice  )  load_DeployNftItemMsg(slice in_msg_body) {
    int query_id = in_msg_body~load_uint(64);
    int nft_represent_ft_amount = in_msg_body~load_coins();
    slice owner_address = in_msg_body~load_msg_addr();  
    slice owner_trc404_wallet_address = in_msg_body~load_msg_addr();  
    slice response_address = in_msg_body~load_msg_addr(); 
    return (query_id,nft_represent_ft_amount, owner_address,owner_trc404_wallet_address,response_address);
}

cell  deployNftItemMsg(int query_id,int nft_represent_ft_amount,slice owner_address,slice owner_trc404_wallet_address,slice response_address) {
      return begin_cell()
            .store_uint(op::deployNftItem(), 32)
            .store_uint(query_id, 64) 
            .store_coins(nft_represent_ft_amount)
            .store_slice(owner_address) 
            .store_slice(owner_trc404_wallet_address) 
            .store_slice(response_address) 
            .end_cell();
}

int op::burn_nft_item() asm "0x5ec28aa9 PUSHINT";

cell burnNftItemMsg(int query_id,slice from,slice from_trc404_wallet,slice response_address){
     return   begin_cell().store_uint(op::burn_nft_item(), 32)
                         .store_uint(query_id, 64)
                         .store_slice(from)  
                         .store_slice(from_trc404_wallet)  
                         .store_slice(response_address)
                         .end_cell();        
}

(int,slice,slice, slice) load_BurnNftItemMsg(slice in_msg_body) {
      int query_id = in_msg_body~load_uint(64);
      slice from = in_msg_body~load_msg_addr();  
      slice from_trc404_wallet = in_msg_body~load_msg_addr();  
      slice response_address = in_msg_body~load_msg_addr(); 
   return (query_id,from,from_trc404_wallet, response_address);    
}


int op::ownership_assigned() asm "0x05138d91 PUSHINT";  

cell ownershipAssignedMsg(int query_id,slice prev_owner,slice forward_payload) {
     return   begin_cell().store_uint(op::ownership_assigned(), 32)
                         .store_uint(query_id, 64)
                         .store_slice(prev_owner)
                         .store_slice(forward_payload)
                         .end_cell();        
}


int op::get_static_data() asm "0x2fcb26a2 PUSHINT"; 

cell getStaticDataMsg(int query_id){
     return begin_cell().store_uint(op::get_static_data(), 32)  
                        .store_uint(query_id, 64).end_cell();
}

int load_GetStaticDataMsg(slice in_msg_body){
     int query_id = in_msg_body~load_uint(64);
     return query_id;
}


int op::report_static_data() asm "0x8b771735 PUSHINT";  

cell reportStaticDataMsg(int query_id,int index,slice collection_address){
     return begin_cell().store_uint(op::report_static_data(), 32)  
                         .store_uint(query_id, 64)
                         .store_uint(index, 256)
                         .store_slice(collection_address)
                         .end_cell();
}
